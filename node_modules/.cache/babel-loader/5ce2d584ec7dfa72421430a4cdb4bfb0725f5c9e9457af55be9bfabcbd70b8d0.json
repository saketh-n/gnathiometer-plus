{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HitContext = exports.SceneContext = exports.Context = void 0;\nconst Util_1 = require(\"./Util\");\nconst Global_1 = require(\"./Global\");\nfunction simplifyArray(arr) {\n  var retArr = [],\n    len = arr.length,\n    util = Util_1.Util,\n    n,\n    val;\n  for (n = 0; n < len; n++) {\n    val = arr[n];\n    if (util._isNumber(val)) {\n      val = Math.round(val * 1000) / 1000;\n    } else if (!util._isString(val)) {\n      val = val + '';\n    }\n    retArr.push(val);\n  }\n  return retArr;\n}\nvar COMMA = ',',\n  OPEN_PAREN = '(',\n  CLOSE_PAREN = ')',\n  OPEN_PAREN_BRACKET = '([',\n  CLOSE_BRACKET_PAREN = '])',\n  SEMICOLON = ';',\n  DOUBLE_PAREN = '()',\n  EQUALS = '=',\n  CONTEXT_METHODS = ['arc', 'arcTo', 'beginPath', 'bezierCurveTo', 'clearRect', 'clip', 'closePath', 'createLinearGradient', 'createPattern', 'createRadialGradient', 'drawImage', 'ellipse', 'fill', 'fillText', 'getImageData', 'createImageData', 'lineTo', 'moveTo', 'putImageData', 'quadraticCurveTo', 'rect', 'restore', 'rotate', 'save', 'scale', 'setLineDash', 'setTransform', 'stroke', 'strokeText', 'transform', 'translate'];\nvar CONTEXT_PROPERTIES = ['fillStyle', 'strokeStyle', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'lineCap', 'lineDashOffset', 'lineJoin', 'lineWidth', 'miterLimit', 'font', 'textAlign', 'textBaseline', 'globalAlpha', 'globalCompositeOperation', 'imageSmoothingEnabled'];\nconst traceArrMax = 100;\nclass Context {\n  constructor(canvas) {\n    this.canvas = canvas;\n    if (Global_1.Konva.enableTrace) {\n      this.traceArr = [];\n      this._enableTrace();\n    }\n  }\n  fillShape(shape) {\n    if (shape.fillEnabled()) {\n      this._fill(shape);\n    }\n  }\n  _fill(shape) {}\n  strokeShape(shape) {\n    if (shape.hasStroke()) {\n      this._stroke(shape);\n    }\n  }\n  _stroke(shape) {}\n  fillStrokeShape(shape) {\n    if (shape.attrs.fillAfterStrokeEnabled) {\n      this.strokeShape(shape);\n      this.fillShape(shape);\n    } else {\n      this.fillShape(shape);\n      this.strokeShape(shape);\n    }\n  }\n  getTrace(relaxed, rounded) {\n    var traceArr = this.traceArr,\n      len = traceArr.length,\n      str = '',\n      n,\n      trace,\n      method,\n      args;\n    for (n = 0; n < len; n++) {\n      trace = traceArr[n];\n      method = trace.method;\n      if (method) {\n        args = trace.args;\n        str += method;\n        if (relaxed) {\n          str += DOUBLE_PAREN;\n        } else {\n          if (Util_1.Util._isArray(args[0])) {\n            str += OPEN_PAREN_BRACKET + args.join(COMMA) + CLOSE_BRACKET_PAREN;\n          } else {\n            if (rounded) {\n              args = args.map(a => typeof a === 'number' ? Math.floor(a) : a);\n            }\n            str += OPEN_PAREN + args.join(COMMA) + CLOSE_PAREN;\n          }\n        }\n      } else {\n        str += trace.property;\n        if (!relaxed) {\n          str += EQUALS + trace.val;\n        }\n      }\n      str += SEMICOLON;\n    }\n    return str;\n  }\n  clearTrace() {\n    this.traceArr = [];\n  }\n  _trace(str) {\n    var traceArr = this.traceArr,\n      len;\n    traceArr.push(str);\n    len = traceArr.length;\n    if (len >= traceArrMax) {\n      traceArr.shift();\n    }\n  }\n  reset() {\n    var pixelRatio = this.getCanvas().getPixelRatio();\n    this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);\n  }\n  getCanvas() {\n    return this.canvas;\n  }\n  clear(bounds) {\n    var canvas = this.getCanvas();\n    if (bounds) {\n      this.clearRect(bounds.x || 0, bounds.y || 0, bounds.width || 0, bounds.height || 0);\n    } else {\n      this.clearRect(0, 0, canvas.getWidth() / canvas.pixelRatio, canvas.getHeight() / canvas.pixelRatio);\n    }\n  }\n  _applyLineCap(shape) {\n    const lineCap = shape.attrs.lineCap;\n    if (lineCap) {\n      this.setAttr('lineCap', lineCap);\n    }\n  }\n  _applyOpacity(shape) {\n    var absOpacity = shape.getAbsoluteOpacity();\n    if (absOpacity !== 1) {\n      this.setAttr('globalAlpha', absOpacity);\n    }\n  }\n  _applyLineJoin(shape) {\n    const lineJoin = shape.attrs.lineJoin;\n    if (lineJoin) {\n      this.setAttr('lineJoin', lineJoin);\n    }\n  }\n  setAttr(attr, val) {\n    this._context[attr] = val;\n  }\n  arc(a0, a1, a2, a3, a4, a5) {\n    this._context.arc(a0, a1, a2, a3, a4, a5);\n  }\n  arcTo(a0, a1, a2, a3, a4) {\n    this._context.arcTo(a0, a1, a2, a3, a4);\n  }\n  beginPath() {\n    this._context.beginPath();\n  }\n  bezierCurveTo(a0, a1, a2, a3, a4, a5) {\n    this._context.bezierCurveTo(a0, a1, a2, a3, a4, a5);\n  }\n  clearRect(a0, a1, a2, a3) {\n    this._context.clearRect(a0, a1, a2, a3);\n  }\n  clip() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    this._context.clip.apply(this._context, args);\n  }\n  closePath() {\n    this._context.closePath();\n  }\n  createImageData(a0, a1) {\n    var a = arguments;\n    if (a.length === 2) {\n      return this._context.createImageData(a0, a1);\n    } else if (a.length === 1) {\n      return this._context.createImageData(a0);\n    }\n  }\n  createLinearGradient(a0, a1, a2, a3) {\n    return this._context.createLinearGradient(a0, a1, a2, a3);\n  }\n  createPattern(a0, a1) {\n    return this._context.createPattern(a0, a1);\n  }\n  createRadialGradient(a0, a1, a2, a3, a4, a5) {\n    return this._context.createRadialGradient(a0, a1, a2, a3, a4, a5);\n  }\n  drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n    var a = arguments,\n      _context = this._context;\n    if (a.length === 3) {\n      _context.drawImage(a0, a1, a2);\n    } else if (a.length === 5) {\n      _context.drawImage(a0, a1, a2, a3, a4);\n    } else if (a.length === 9) {\n      _context.drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8);\n    }\n  }\n  ellipse(a0, a1, a2, a3, a4, a5, a6, a7) {\n    this._context.ellipse(a0, a1, a2, a3, a4, a5, a6, a7);\n  }\n  isPointInPath(x, y, path, fillRule) {\n    if (path) {\n      return this._context.isPointInPath(path, x, y, fillRule);\n    }\n    return this._context.isPointInPath(x, y, fillRule);\n  }\n  fill() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    this._context.fill.apply(this._context, args);\n  }\n  fillRect(x, y, width, height) {\n    this._context.fillRect(x, y, width, height);\n  }\n  strokeRect(x, y, width, height) {\n    this._context.strokeRect(x, y, width, height);\n  }\n  fillText(text, x, y, maxWidth) {\n    if (maxWidth) {\n      this._context.fillText(text, x, y, maxWidth);\n    } else {\n      this._context.fillText(text, x, y);\n    }\n  }\n  measureText(text) {\n    return this._context.measureText(text);\n  }\n  getImageData(a0, a1, a2, a3) {\n    return this._context.getImageData(a0, a1, a2, a3);\n  }\n  lineTo(a0, a1) {\n    this._context.lineTo(a0, a1);\n  }\n  moveTo(a0, a1) {\n    this._context.moveTo(a0, a1);\n  }\n  rect(a0, a1, a2, a3) {\n    this._context.rect(a0, a1, a2, a3);\n  }\n  putImageData(a0, a1, a2) {\n    this._context.putImageData(a0, a1, a2);\n  }\n  quadraticCurveTo(a0, a1, a2, a3) {\n    this._context.quadraticCurveTo(a0, a1, a2, a3);\n  }\n  restore() {\n    this._context.restore();\n  }\n  rotate(a0) {\n    this._context.rotate(a0);\n  }\n  save() {\n    this._context.save();\n  }\n  scale(a0, a1) {\n    this._context.scale(a0, a1);\n  }\n  setLineDash(a0) {\n    if (this._context.setLineDash) {\n      this._context.setLineDash(a0);\n    } else if ('mozDash' in this._context) {\n      this._context['mozDash'] = a0;\n    } else if ('webkitLineDash' in this._context) {\n      this._context['webkitLineDash'] = a0;\n    }\n  }\n  getLineDash() {\n    return this._context.getLineDash();\n  }\n  setTransform(a0, a1, a2, a3, a4, a5) {\n    this._context.setTransform(a0, a1, a2, a3, a4, a5);\n  }\n  stroke(path2d) {\n    if (path2d) {\n      this._context.stroke(path2d);\n    } else {\n      this._context.stroke();\n    }\n  }\n  strokeText(a0, a1, a2, a3) {\n    this._context.strokeText(a0, a1, a2, a3);\n  }\n  transform(a0, a1, a2, a3, a4, a5) {\n    this._context.transform(a0, a1, a2, a3, a4, a5);\n  }\n  translate(a0, a1) {\n    this._context.translate(a0, a1);\n  }\n  _enableTrace() {\n    var that = this,\n      len = CONTEXT_METHODS.length,\n      origSetter = this.setAttr,\n      n,\n      args;\n    var func = function (methodName) {\n      var origMethod = that[methodName],\n        ret;\n      that[methodName] = function () {\n        args = simplifyArray(Array.prototype.slice.call(arguments, 0));\n        ret = origMethod.apply(that, arguments);\n        that._trace({\n          method: methodName,\n          args: args\n        });\n        return ret;\n      };\n    };\n    for (n = 0; n < len; n++) {\n      func(CONTEXT_METHODS[n]);\n    }\n    that.setAttr = function () {\n      origSetter.apply(that, arguments);\n      var prop = arguments[0];\n      var val = arguments[1];\n      if (prop === 'shadowOffsetX' || prop === 'shadowOffsetY' || prop === 'shadowBlur') {\n        val = val / this.canvas.getPixelRatio();\n      }\n      that._trace({\n        property: prop,\n        val: val\n      });\n    };\n  }\n  _applyGlobalCompositeOperation(node) {\n    const op = node.attrs.globalCompositeOperation;\n    var def = !op || op === 'source-over';\n    if (!def) {\n      this.setAttr('globalCompositeOperation', op);\n    }\n  }\n}\nexports.Context = Context;\nCONTEXT_PROPERTIES.forEach(function (prop) {\n  Object.defineProperty(Context.prototype, prop, {\n    get() {\n      return this._context[prop];\n    },\n    set(val) {\n      this._context[prop] = val;\n    }\n  });\n});\nclass SceneContext extends Context {\n  constructor(canvas) {\n    let {\n      willReadFrequently = false\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super(canvas);\n    this._context = canvas._canvas.getContext('2d', {\n      willReadFrequently\n    });\n  }\n  _fillColor(shape) {\n    var fill = shape.fill();\n    this.setAttr('fillStyle', fill);\n    shape._fillFunc(this);\n  }\n  _fillPattern(shape) {\n    this.setAttr('fillStyle', shape._getFillPattern());\n    shape._fillFunc(this);\n  }\n  _fillLinearGradient(shape) {\n    var grd = shape._getLinearGradient();\n    if (grd) {\n      this.setAttr('fillStyle', grd);\n      shape._fillFunc(this);\n    }\n  }\n  _fillRadialGradient(shape) {\n    const grd = shape._getRadialGradient();\n    if (grd) {\n      this.setAttr('fillStyle', grd);\n      shape._fillFunc(this);\n    }\n  }\n  _fill(shape) {\n    const hasColor = shape.fill(),\n      fillPriority = shape.getFillPriority();\n    if (hasColor && fillPriority === 'color') {\n      this._fillColor(shape);\n      return;\n    }\n    const hasPattern = shape.getFillPatternImage();\n    if (hasPattern && fillPriority === 'pattern') {\n      this._fillPattern(shape);\n      return;\n    }\n    const hasLinearGradient = shape.getFillLinearGradientColorStops();\n    if (hasLinearGradient && fillPriority === 'linear-gradient') {\n      this._fillLinearGradient(shape);\n      return;\n    }\n    const hasRadialGradient = shape.getFillRadialGradientColorStops();\n    if (hasRadialGradient && fillPriority === 'radial-gradient') {\n      this._fillRadialGradient(shape);\n      return;\n    }\n    if (hasColor) {\n      this._fillColor(shape);\n    } else if (hasPattern) {\n      this._fillPattern(shape);\n    } else if (hasLinearGradient) {\n      this._fillLinearGradient(shape);\n    } else if (hasRadialGradient) {\n      this._fillRadialGradient(shape);\n    }\n  }\n  _strokeLinearGradient(shape) {\n    const start = shape.getStrokeLinearGradientStartPoint(),\n      end = shape.getStrokeLinearGradientEndPoint(),\n      colorStops = shape.getStrokeLinearGradientColorStops(),\n      grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\n    if (colorStops) {\n      for (var n = 0; n < colorStops.length; n += 2) {\n        grd.addColorStop(colorStops[n], colorStops[n + 1]);\n      }\n      this.setAttr('strokeStyle', grd);\n    }\n  }\n  _stroke(shape) {\n    var dash = shape.dash(),\n      strokeScaleEnabled = shape.getStrokeScaleEnabled();\n    if (shape.hasStroke()) {\n      if (!strokeScaleEnabled) {\n        this.save();\n        var pixelRatio = this.getCanvas().getPixelRatio();\n        this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n      }\n      this._applyLineCap(shape);\n      if (dash && shape.dashEnabled()) {\n        this.setLineDash(dash);\n        this.setAttr('lineDashOffset', shape.dashOffset());\n      }\n      this.setAttr('lineWidth', shape.strokeWidth());\n      if (!shape.getShadowForStrokeEnabled()) {\n        this.setAttr('shadowColor', 'rgba(0,0,0,0)');\n      }\n      var hasLinearGradient = shape.getStrokeLinearGradientColorStops();\n      if (hasLinearGradient) {\n        this._strokeLinearGradient(shape);\n      } else {\n        this.setAttr('strokeStyle', shape.stroke());\n      }\n      shape._strokeFunc(this);\n      if (!strokeScaleEnabled) {\n        this.restore();\n      }\n    }\n  }\n  _applyShadow(shape) {\n    var _a, _b, _c;\n    var color = (_a = shape.getShadowRGBA()) !== null && _a !== void 0 ? _a : 'black',\n      blur = (_b = shape.getShadowBlur()) !== null && _b !== void 0 ? _b : 5,\n      offset = (_c = shape.getShadowOffset()) !== null && _c !== void 0 ? _c : {\n        x: 0,\n        y: 0\n      },\n      scale = shape.getAbsoluteScale(),\n      ratio = this.canvas.getPixelRatio(),\n      scaleX = scale.x * ratio,\n      scaleY = scale.y * ratio;\n    this.setAttr('shadowColor', color);\n    this.setAttr('shadowBlur', blur * Math.min(Math.abs(scaleX), Math.abs(scaleY)));\n    this.setAttr('shadowOffsetX', offset.x * scaleX);\n    this.setAttr('shadowOffsetY', offset.y * scaleY);\n  }\n}\nexports.SceneContext = SceneContext;\nclass HitContext extends Context {\n  constructor(canvas) {\n    super(canvas);\n    this._context = canvas._canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n  }\n  _fill(shape) {\n    this.save();\n    this.setAttr('fillStyle', shape.colorKey);\n    shape._fillFuncHit(this);\n    this.restore();\n  }\n  strokeShape(shape) {\n    if (shape.hasHitStroke()) {\n      this._stroke(shape);\n    }\n  }\n  _stroke(shape) {\n    if (shape.hasHitStroke()) {\n      const strokeScaleEnabled = shape.getStrokeScaleEnabled();\n      if (!strokeScaleEnabled) {\n        this.save();\n        var pixelRatio = this.getCanvas().getPixelRatio();\n        this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n      }\n      this._applyLineCap(shape);\n      var hitStrokeWidth = shape.hitStrokeWidth();\n      var strokeWidth = hitStrokeWidth === 'auto' ? shape.strokeWidth() : hitStrokeWidth;\n      this.setAttr('lineWidth', strokeWidth);\n      this.setAttr('strokeStyle', shape.colorKey);\n      shape._strokeFuncHit(this);\n      if (!strokeScaleEnabled) {\n        this.restore();\n      }\n    }\n  }\n}\nexports.HitContext = HitContext;","map":{"version":3,"names":["Object","defineProperty","exports","value","HitContext","SceneContext","Context","Util_1","require","Global_1","simplifyArray","arr","retArr","len","length","util","Util","n","val","_isNumber","Math","round","_isString","push","COMMA","OPEN_PAREN","CLOSE_PAREN","OPEN_PAREN_BRACKET","CLOSE_BRACKET_PAREN","SEMICOLON","DOUBLE_PAREN","EQUALS","CONTEXT_METHODS","CONTEXT_PROPERTIES","traceArrMax","constructor","canvas","Konva","enableTrace","traceArr","_enableTrace","fillShape","shape","fillEnabled","_fill","strokeShape","hasStroke","_stroke","fillStrokeShape","attrs","fillAfterStrokeEnabled","getTrace","relaxed","rounded","str","trace","method","args","_isArray","join","map","a","floor","property","clearTrace","_trace","shift","reset","pixelRatio","getCanvas","getPixelRatio","setTransform","clear","bounds","clearRect","x","y","width","height","getWidth","getHeight","_applyLineCap","lineCap","setAttr","_applyOpacity","absOpacity","getAbsoluteOpacity","_applyLineJoin","lineJoin","attr","_context","arc","a0","a1","a2","a3","a4","a5","arcTo","beginPath","bezierCurveTo","clip","_len","arguments","Array","_key","apply","closePath","createImageData","createLinearGradient","createPattern","createRadialGradient","drawImage","a6","a7","a8","ellipse","isPointInPath","path","fillRule","fill","_len2","_key2","fillRect","strokeRect","fillText","text","maxWidth","measureText","getImageData","lineTo","moveTo","rect","putImageData","quadraticCurveTo","restore","rotate","save","scale","setLineDash","getLineDash","stroke","path2d","strokeText","transform","translate","that","origSetter","func","methodName","origMethod","ret","prototype","slice","call","prop","_applyGlobalCompositeOperation","node","op","globalCompositeOperation","def","forEach","get","set","willReadFrequently","undefined","_canvas","getContext","_fillColor","_fillFunc","_fillPattern","_getFillPattern","_fillLinearGradient","grd","_getLinearGradient","_fillRadialGradient","_getRadialGradient","hasColor","fillPriority","getFillPriority","hasPattern","getFillPatternImage","hasLinearGradient","getFillLinearGradientColorStops","hasRadialGradient","getFillRadialGradientColorStops","_strokeLinearGradient","start","getStrokeLinearGradientStartPoint","end","getStrokeLinearGradientEndPoint","colorStops","getStrokeLinearGradientColorStops","addColorStop","dash","strokeScaleEnabled","getStrokeScaleEnabled","dashEnabled","dashOffset","strokeWidth","getShadowForStrokeEnabled","_strokeFunc","_applyShadow","_a","_b","_c","color","getShadowRGBA","blur","getShadowBlur","offset","getShadowOffset","getAbsoluteScale","ratio","scaleX","scaleY","min","abs","colorKey","_fillFuncHit","hasHitStroke","hitStrokeWidth","_strokeFuncHit"],"sources":["/Users/sakethn/Documents/Elysium/SDE @ Ortho/gnathiometer-plus/node_modules/konva/lib/Context.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HitContext = exports.SceneContext = exports.Context = void 0;\nconst Util_1 = require(\"./Util\");\nconst Global_1 = require(\"./Global\");\nfunction simplifyArray(arr) {\n    var retArr = [], len = arr.length, util = Util_1.Util, n, val;\n    for (n = 0; n < len; n++) {\n        val = arr[n];\n        if (util._isNumber(val)) {\n            val = Math.round(val * 1000) / 1000;\n        }\n        else if (!util._isString(val)) {\n            val = val + '';\n        }\n        retArr.push(val);\n    }\n    return retArr;\n}\nvar COMMA = ',', OPEN_PAREN = '(', CLOSE_PAREN = ')', OPEN_PAREN_BRACKET = '([', CLOSE_BRACKET_PAREN = '])', SEMICOLON = ';', DOUBLE_PAREN = '()', EQUALS = '=', CONTEXT_METHODS = [\n    'arc',\n    'arcTo',\n    'beginPath',\n    'bezierCurveTo',\n    'clearRect',\n    'clip',\n    'closePath',\n    'createLinearGradient',\n    'createPattern',\n    'createRadialGradient',\n    'drawImage',\n    'ellipse',\n    'fill',\n    'fillText',\n    'getImageData',\n    'createImageData',\n    'lineTo',\n    'moveTo',\n    'putImageData',\n    'quadraticCurveTo',\n    'rect',\n    'restore',\n    'rotate',\n    'save',\n    'scale',\n    'setLineDash',\n    'setTransform',\n    'stroke',\n    'strokeText',\n    'transform',\n    'translate',\n];\nvar CONTEXT_PROPERTIES = [\n    'fillStyle',\n    'strokeStyle',\n    'shadowColor',\n    'shadowBlur',\n    'shadowOffsetX',\n    'shadowOffsetY',\n    'lineCap',\n    'lineDashOffset',\n    'lineJoin',\n    'lineWidth',\n    'miterLimit',\n    'font',\n    'textAlign',\n    'textBaseline',\n    'globalAlpha',\n    'globalCompositeOperation',\n    'imageSmoothingEnabled',\n];\nconst traceArrMax = 100;\nclass Context {\n    constructor(canvas) {\n        this.canvas = canvas;\n        if (Global_1.Konva.enableTrace) {\n            this.traceArr = [];\n            this._enableTrace();\n        }\n    }\n    fillShape(shape) {\n        if (shape.fillEnabled()) {\n            this._fill(shape);\n        }\n    }\n    _fill(shape) {\n    }\n    strokeShape(shape) {\n        if (shape.hasStroke()) {\n            this._stroke(shape);\n        }\n    }\n    _stroke(shape) {\n    }\n    fillStrokeShape(shape) {\n        if (shape.attrs.fillAfterStrokeEnabled) {\n            this.strokeShape(shape);\n            this.fillShape(shape);\n        }\n        else {\n            this.fillShape(shape);\n            this.strokeShape(shape);\n        }\n    }\n    getTrace(relaxed, rounded) {\n        var traceArr = this.traceArr, len = traceArr.length, str = '', n, trace, method, args;\n        for (n = 0; n < len; n++) {\n            trace = traceArr[n];\n            method = trace.method;\n            if (method) {\n                args = trace.args;\n                str += method;\n                if (relaxed) {\n                    str += DOUBLE_PAREN;\n                }\n                else {\n                    if (Util_1.Util._isArray(args[0])) {\n                        str += OPEN_PAREN_BRACKET + args.join(COMMA) + CLOSE_BRACKET_PAREN;\n                    }\n                    else {\n                        if (rounded) {\n                            args = args.map((a) => typeof a === 'number' ? Math.floor(a) : a);\n                        }\n                        str += OPEN_PAREN + args.join(COMMA) + CLOSE_PAREN;\n                    }\n                }\n            }\n            else {\n                str += trace.property;\n                if (!relaxed) {\n                    str += EQUALS + trace.val;\n                }\n            }\n            str += SEMICOLON;\n        }\n        return str;\n    }\n    clearTrace() {\n        this.traceArr = [];\n    }\n    _trace(str) {\n        var traceArr = this.traceArr, len;\n        traceArr.push(str);\n        len = traceArr.length;\n        if (len >= traceArrMax) {\n            traceArr.shift();\n        }\n    }\n    reset() {\n        var pixelRatio = this.getCanvas().getPixelRatio();\n        this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);\n    }\n    getCanvas() {\n        return this.canvas;\n    }\n    clear(bounds) {\n        var canvas = this.getCanvas();\n        if (bounds) {\n            this.clearRect(bounds.x || 0, bounds.y || 0, bounds.width || 0, bounds.height || 0);\n        }\n        else {\n            this.clearRect(0, 0, canvas.getWidth() / canvas.pixelRatio, canvas.getHeight() / canvas.pixelRatio);\n        }\n    }\n    _applyLineCap(shape) {\n        const lineCap = shape.attrs.lineCap;\n        if (lineCap) {\n            this.setAttr('lineCap', lineCap);\n        }\n    }\n    _applyOpacity(shape) {\n        var absOpacity = shape.getAbsoluteOpacity();\n        if (absOpacity !== 1) {\n            this.setAttr('globalAlpha', absOpacity);\n        }\n    }\n    _applyLineJoin(shape) {\n        const lineJoin = shape.attrs.lineJoin;\n        if (lineJoin) {\n            this.setAttr('lineJoin', lineJoin);\n        }\n    }\n    setAttr(attr, val) {\n        this._context[attr] = val;\n    }\n    arc(a0, a1, a2, a3, a4, a5) {\n        this._context.arc(a0, a1, a2, a3, a4, a5);\n    }\n    arcTo(a0, a1, a2, a3, a4) {\n        this._context.arcTo(a0, a1, a2, a3, a4);\n    }\n    beginPath() {\n        this._context.beginPath();\n    }\n    bezierCurveTo(a0, a1, a2, a3, a4, a5) {\n        this._context.bezierCurveTo(a0, a1, a2, a3, a4, a5);\n    }\n    clearRect(a0, a1, a2, a3) {\n        this._context.clearRect(a0, a1, a2, a3);\n    }\n    clip(...args) {\n        this._context.clip.apply(this._context, args);\n    }\n    closePath() {\n        this._context.closePath();\n    }\n    createImageData(a0, a1) {\n        var a = arguments;\n        if (a.length === 2) {\n            return this._context.createImageData(a0, a1);\n        }\n        else if (a.length === 1) {\n            return this._context.createImageData(a0);\n        }\n    }\n    createLinearGradient(a0, a1, a2, a3) {\n        return this._context.createLinearGradient(a0, a1, a2, a3);\n    }\n    createPattern(a0, a1) {\n        return this._context.createPattern(a0, a1);\n    }\n    createRadialGradient(a0, a1, a2, a3, a4, a5) {\n        return this._context.createRadialGradient(a0, a1, a2, a3, a4, a5);\n    }\n    drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        var a = arguments, _context = this._context;\n        if (a.length === 3) {\n            _context.drawImage(a0, a1, a2);\n        }\n        else if (a.length === 5) {\n            _context.drawImage(a0, a1, a2, a3, a4);\n        }\n        else if (a.length === 9) {\n            _context.drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8);\n        }\n    }\n    ellipse(a0, a1, a2, a3, a4, a5, a6, a7) {\n        this._context.ellipse(a0, a1, a2, a3, a4, a5, a6, a7);\n    }\n    isPointInPath(x, y, path, fillRule) {\n        if (path) {\n            return this._context.isPointInPath(path, x, y, fillRule);\n        }\n        return this._context.isPointInPath(x, y, fillRule);\n    }\n    fill(...args) {\n        this._context.fill.apply(this._context, args);\n    }\n    fillRect(x, y, width, height) {\n        this._context.fillRect(x, y, width, height);\n    }\n    strokeRect(x, y, width, height) {\n        this._context.strokeRect(x, y, width, height);\n    }\n    fillText(text, x, y, maxWidth) {\n        if (maxWidth) {\n            this._context.fillText(text, x, y, maxWidth);\n        }\n        else {\n            this._context.fillText(text, x, y);\n        }\n    }\n    measureText(text) {\n        return this._context.measureText(text);\n    }\n    getImageData(a0, a1, a2, a3) {\n        return this._context.getImageData(a0, a1, a2, a3);\n    }\n    lineTo(a0, a1) {\n        this._context.lineTo(a0, a1);\n    }\n    moveTo(a0, a1) {\n        this._context.moveTo(a0, a1);\n    }\n    rect(a0, a1, a2, a3) {\n        this._context.rect(a0, a1, a2, a3);\n    }\n    putImageData(a0, a1, a2) {\n        this._context.putImageData(a0, a1, a2);\n    }\n    quadraticCurveTo(a0, a1, a2, a3) {\n        this._context.quadraticCurveTo(a0, a1, a2, a3);\n    }\n    restore() {\n        this._context.restore();\n    }\n    rotate(a0) {\n        this._context.rotate(a0);\n    }\n    save() {\n        this._context.save();\n    }\n    scale(a0, a1) {\n        this._context.scale(a0, a1);\n    }\n    setLineDash(a0) {\n        if (this._context.setLineDash) {\n            this._context.setLineDash(a0);\n        }\n        else if ('mozDash' in this._context) {\n            this._context['mozDash'] = a0;\n        }\n        else if ('webkitLineDash' in this._context) {\n            this._context['webkitLineDash'] = a0;\n        }\n    }\n    getLineDash() {\n        return this._context.getLineDash();\n    }\n    setTransform(a0, a1, a2, a3, a4, a5) {\n        this._context.setTransform(a0, a1, a2, a3, a4, a5);\n    }\n    stroke(path2d) {\n        if (path2d) {\n            this._context.stroke(path2d);\n        }\n        else {\n            this._context.stroke();\n        }\n    }\n    strokeText(a0, a1, a2, a3) {\n        this._context.strokeText(a0, a1, a2, a3);\n    }\n    transform(a0, a1, a2, a3, a4, a5) {\n        this._context.transform(a0, a1, a2, a3, a4, a5);\n    }\n    translate(a0, a1) {\n        this._context.translate(a0, a1);\n    }\n    _enableTrace() {\n        var that = this, len = CONTEXT_METHODS.length, origSetter = this.setAttr, n, args;\n        var func = function (methodName) {\n            var origMethod = that[methodName], ret;\n            that[methodName] = function () {\n                args = simplifyArray(Array.prototype.slice.call(arguments, 0));\n                ret = origMethod.apply(that, arguments);\n                that._trace({\n                    method: methodName,\n                    args: args,\n                });\n                return ret;\n            };\n        };\n        for (n = 0; n < len; n++) {\n            func(CONTEXT_METHODS[n]);\n        }\n        that.setAttr = function () {\n            origSetter.apply(that, arguments);\n            var prop = arguments[0];\n            var val = arguments[1];\n            if (prop === 'shadowOffsetX' ||\n                prop === 'shadowOffsetY' ||\n                prop === 'shadowBlur') {\n                val = val / this.canvas.getPixelRatio();\n            }\n            that._trace({\n                property: prop,\n                val: val,\n            });\n        };\n    }\n    _applyGlobalCompositeOperation(node) {\n        const op = node.attrs.globalCompositeOperation;\n        var def = !op || op === 'source-over';\n        if (!def) {\n            this.setAttr('globalCompositeOperation', op);\n        }\n    }\n}\nexports.Context = Context;\nCONTEXT_PROPERTIES.forEach(function (prop) {\n    Object.defineProperty(Context.prototype, prop, {\n        get() {\n            return this._context[prop];\n        },\n        set(val) {\n            this._context[prop] = val;\n        },\n    });\n});\nclass SceneContext extends Context {\n    constructor(canvas, { willReadFrequently = false } = {}) {\n        super(canvas);\n        this._context = canvas._canvas.getContext('2d', {\n            willReadFrequently,\n        });\n    }\n    _fillColor(shape) {\n        var fill = shape.fill();\n        this.setAttr('fillStyle', fill);\n        shape._fillFunc(this);\n    }\n    _fillPattern(shape) {\n        this.setAttr('fillStyle', shape._getFillPattern());\n        shape._fillFunc(this);\n    }\n    _fillLinearGradient(shape) {\n        var grd = shape._getLinearGradient();\n        if (grd) {\n            this.setAttr('fillStyle', grd);\n            shape._fillFunc(this);\n        }\n    }\n    _fillRadialGradient(shape) {\n        const grd = shape._getRadialGradient();\n        if (grd) {\n            this.setAttr('fillStyle', grd);\n            shape._fillFunc(this);\n        }\n    }\n    _fill(shape) {\n        const hasColor = shape.fill(), fillPriority = shape.getFillPriority();\n        if (hasColor && fillPriority === 'color') {\n            this._fillColor(shape);\n            return;\n        }\n        const hasPattern = shape.getFillPatternImage();\n        if (hasPattern && fillPriority === 'pattern') {\n            this._fillPattern(shape);\n            return;\n        }\n        const hasLinearGradient = shape.getFillLinearGradientColorStops();\n        if (hasLinearGradient && fillPriority === 'linear-gradient') {\n            this._fillLinearGradient(shape);\n            return;\n        }\n        const hasRadialGradient = shape.getFillRadialGradientColorStops();\n        if (hasRadialGradient && fillPriority === 'radial-gradient') {\n            this._fillRadialGradient(shape);\n            return;\n        }\n        if (hasColor) {\n            this._fillColor(shape);\n        }\n        else if (hasPattern) {\n            this._fillPattern(shape);\n        }\n        else if (hasLinearGradient) {\n            this._fillLinearGradient(shape);\n        }\n        else if (hasRadialGradient) {\n            this._fillRadialGradient(shape);\n        }\n    }\n    _strokeLinearGradient(shape) {\n        const start = shape.getStrokeLinearGradientStartPoint(), end = shape.getStrokeLinearGradientEndPoint(), colorStops = shape.getStrokeLinearGradientColorStops(), grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\n        if (colorStops) {\n            for (var n = 0; n < colorStops.length; n += 2) {\n                grd.addColorStop(colorStops[n], colorStops[n + 1]);\n            }\n            this.setAttr('strokeStyle', grd);\n        }\n    }\n    _stroke(shape) {\n        var dash = shape.dash(), strokeScaleEnabled = shape.getStrokeScaleEnabled();\n        if (shape.hasStroke()) {\n            if (!strokeScaleEnabled) {\n                this.save();\n                var pixelRatio = this.getCanvas().getPixelRatio();\n                this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            }\n            this._applyLineCap(shape);\n            if (dash && shape.dashEnabled()) {\n                this.setLineDash(dash);\n                this.setAttr('lineDashOffset', shape.dashOffset());\n            }\n            this.setAttr('lineWidth', shape.strokeWidth());\n            if (!shape.getShadowForStrokeEnabled()) {\n                this.setAttr('shadowColor', 'rgba(0,0,0,0)');\n            }\n            var hasLinearGradient = shape.getStrokeLinearGradientColorStops();\n            if (hasLinearGradient) {\n                this._strokeLinearGradient(shape);\n            }\n            else {\n                this.setAttr('strokeStyle', shape.stroke());\n            }\n            shape._strokeFunc(this);\n            if (!strokeScaleEnabled) {\n                this.restore();\n            }\n        }\n    }\n    _applyShadow(shape) {\n        var _a, _b, _c;\n        var color = (_a = shape.getShadowRGBA()) !== null && _a !== void 0 ? _a : 'black', blur = (_b = shape.getShadowBlur()) !== null && _b !== void 0 ? _b : 5, offset = (_c = shape.getShadowOffset()) !== null && _c !== void 0 ? _c : {\n            x: 0,\n            y: 0,\n        }, scale = shape.getAbsoluteScale(), ratio = this.canvas.getPixelRatio(), scaleX = scale.x * ratio, scaleY = scale.y * ratio;\n        this.setAttr('shadowColor', color);\n        this.setAttr('shadowBlur', blur * Math.min(Math.abs(scaleX), Math.abs(scaleY)));\n        this.setAttr('shadowOffsetX', offset.x * scaleX);\n        this.setAttr('shadowOffsetY', offset.y * scaleY);\n    }\n}\nexports.SceneContext = SceneContext;\nclass HitContext extends Context {\n    constructor(canvas) {\n        super(canvas);\n        this._context = canvas._canvas.getContext('2d', {\n            willReadFrequently: true,\n        });\n    }\n    _fill(shape) {\n        this.save();\n        this.setAttr('fillStyle', shape.colorKey);\n        shape._fillFuncHit(this);\n        this.restore();\n    }\n    strokeShape(shape) {\n        if (shape.hasHitStroke()) {\n            this._stroke(shape);\n        }\n    }\n    _stroke(shape) {\n        if (shape.hasHitStroke()) {\n            const strokeScaleEnabled = shape.getStrokeScaleEnabled();\n            if (!strokeScaleEnabled) {\n                this.save();\n                var pixelRatio = this.getCanvas().getPixelRatio();\n                this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            }\n            this._applyLineCap(shape);\n            var hitStrokeWidth = shape.hitStrokeWidth();\n            var strokeWidth = hitStrokeWidth === 'auto' ? shape.strokeWidth() : hitStrokeWidth;\n            this.setAttr('lineWidth', strokeWidth);\n            this.setAttr('strokeStyle', shape.colorKey);\n            shape._strokeFuncHit(this);\n            if (!strokeScaleEnabled) {\n                this.restore();\n            }\n        }\n    }\n}\nexports.HitContext = HitContext;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}