{"ast":null,"code":"var _jsxFileName = \"/Users/sakethn/Documents/Elysium/SDE @ Ortho/gnathiometer-plus/src/components/ChinMarker.js\";\nimport React from \"react\";\nimport { Stage, Layer, Line, Circle } from \"react-konva\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ChinMarker(_ref) {\n  let {\n    position,\n    onDragMove\n  } = _ref;\n  // These could be made dynamic if you want\n  const lineLength = 50;\n  const gapLength = 10;\n  const lineColor = \"black\";\n  const circleColor = \"red\";\n  const lineWidth = 2;\n\n  // Calculate points for lines\n  const leftLinePoints = [0, 0, lineLength / 2 - gapLength / 2, 0];\n  const rightLinePoints = [lineLength / 2 + gapLength / 2, 0, lineLength, 0];\n\n  // Circle position\n  const circlePosition = {\n    x: lineLength / 2,\n    y: 0\n  };\n  return /*#__PURE__*/_jsxDEV(Stage, {\n    width: lineLength,\n    height: 10,\n    draggable: true,\n    onDragMove: onDragMove,\n    position: position,\n    children: /*#__PURE__*/_jsxDEV(Layer, {\n      children: [/*#__PURE__*/_jsxDEV(Line, {\n        points: leftLinePoints,\n        stroke: lineColor,\n        strokeWidth: lineWidth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        points: rightLinePoints,\n        stroke: lineColor,\n        strokeWidth: lineWidth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Circle, {\n        radius: lineWidth * 2,\n        fill: circleColor,\n        ...circlePosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = ChinMarker;\nvar _c;\n$RefreshReg$(_c, \"ChinMarker\");","map":{"version":3,"names":["React","Stage","Layer","Line","Circle","jsxDEV","_jsxDEV","ChinMarker","_ref","position","onDragMove","lineLength","gapLength","lineColor","circleColor","lineWidth","leftLinePoints","rightLinePoints","circlePosition","x","y","width","height","draggable","children","points","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","radius","fill","_c","$RefreshReg$"],"sources":["/Users/sakethn/Documents/Elysium/SDE @ Ortho/gnathiometer-plus/src/components/ChinMarker.js"],"sourcesContent":["import React from \"react\";\nimport { Stage, Layer, Line, Circle } from \"react-konva\";\n\nexport function ChinMarker({ position, onDragMove }) {\n  // These could be made dynamic if you want\n  const lineLength = 50;\n  const gapLength = 10;\n  const lineColor = \"black\";\n  const circleColor = \"red\";\n  const lineWidth = 2;\n\n  // Calculate points for lines\n  const leftLinePoints = [0, 0, lineLength / 2 - gapLength / 2, 0];\n  const rightLinePoints = [lineLength / 2 + gapLength / 2, 0, lineLength, 0];\n\n  // Circle position\n  const circlePosition = { x: lineLength / 2, y: 0 };\n\n  return (\n    <Stage\n      width={lineLength}\n      height={10}\n      draggable\n      onDragMove={onDragMove}\n      position={position}\n    >\n      <Layer>\n        <Line\n          points={leftLinePoints}\n          stroke={lineColor}\n          strokeWidth={lineWidth}\n        />\n        <Line\n          points={rightLinePoints}\n          stroke={lineColor}\n          strokeWidth={lineWidth}\n        />\n        <Circle radius={lineWidth * 2} fill={circleColor} {...circlePosition} />\n      </Layer>\n    </Stage>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,MAAM,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,OAAO,SAASC,UAAUA,CAAAC,IAAA,EAA2B;EAAA,IAA1B;IAAEC,QAAQ;IAAEC;EAAW,CAAC,GAAAF,IAAA;EACjD;EACA,MAAMG,UAAU,GAAG,EAAE;EACrB,MAAMC,SAAS,GAAG,EAAE;EACpB,MAAMC,SAAS,GAAG,OAAO;EACzB,MAAMC,WAAW,GAAG,KAAK;EACzB,MAAMC,SAAS,GAAG,CAAC;;EAEnB;EACA,MAAMC,cAAc,GAAG,CAAC,CAAC,EAAE,CAAC,EAAEL,UAAU,GAAG,CAAC,GAAGC,SAAS,GAAG,CAAC,EAAE,CAAC,CAAC;EAChE,MAAMK,eAAe,GAAG,CAACN,UAAU,GAAG,CAAC,GAAGC,SAAS,GAAG,CAAC,EAAE,CAAC,EAAED,UAAU,EAAE,CAAC,CAAC;;EAE1E;EACA,MAAMO,cAAc,GAAG;IAAEC,CAAC,EAAER,UAAU,GAAG,CAAC;IAAES,CAAC,EAAE;EAAE,CAAC;EAElD,oBACEd,OAAA,CAACL,KAAK;IACJoB,KAAK,EAAEV,UAAW;IAClBW,MAAM,EAAE,EAAG;IACXC,SAAS;IACTb,UAAU,EAAEA,UAAW;IACvBD,QAAQ,EAAEA,QAAS;IAAAe,QAAA,eAEnBlB,OAAA,CAACJ,KAAK;MAAAsB,QAAA,gBACJlB,OAAA,CAACH,IAAI;QACHsB,MAAM,EAAET,cAAe;QACvBU,MAAM,EAAEb,SAAU;QAClBc,WAAW,EAAEZ;MAAU;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACFzB,OAAA,CAACH,IAAI;QACHsB,MAAM,EAAER,eAAgB;QACxBS,MAAM,EAAEb,SAAU;QAClBc,WAAW,EAAEZ;MAAU;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACFzB,OAAA,CAACF,MAAM;QAAC4B,MAAM,EAAEjB,SAAS,GAAG,CAAE;QAACkB,IAAI,EAAEnB,WAAY;QAAA,GAAKI;MAAc;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ;AAACG,EAAA,GAtCe3B,UAAU;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}