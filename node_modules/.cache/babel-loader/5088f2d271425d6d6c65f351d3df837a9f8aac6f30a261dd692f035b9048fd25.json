{"ast":null,"code":"var _jsxFileName = \"/Users/sakethn/Documents/Elysium/SDE @ Ortho/gnathiometer-plus/src/components/ChinMarker.js\";\nimport React from \"react\";\nimport { Stage, Layer, Line, Circle } from \"react-konva\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ChinMarker(_ref) {\n  let {\n    position,\n    onDragMove\n  } = _ref;\n  // These could be made dynamic if you want\n  const lineLength = 50;\n  const gapLength = 10;\n  const lineColor = \"black\";\n  const circleColor = \"red\";\n  const lineWidth = 2;\n  const canvasSize = 500; // set the canvas size\n\n  // Calculate points for lines\n  const leftLinePoints = [0, 0, lineLength / 2 - gapLength / 2, 0];\n  const rightLinePoints = [lineLength / 2 + gapLength / 2, 0, lineLength, 0];\n\n  // Circle position\n  const circlePosition = {\n    x: lineLength / 2,\n    y: 0\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"LOL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stage, {\n      width: canvasSize,\n      height: canvasSize,\n      draggable: true,\n      onDragMove: onDragMove,\n      position: position,\n      children: /*#__PURE__*/_jsxDEV(Layer, {\n        children: [/*#__PURE__*/_jsxDEV(Line, {\n          points: leftLinePoints,\n          stroke: lineColor,\n          strokeWidth: lineWidth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          points: rightLinePoints,\n          stroke: lineColor,\n          strokeWidth: lineWidth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Circle, {\n          radius: lineWidth * 2,\n          fill: circleColor,\n          ...circlePosition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_c = ChinMarker;\nvar _c;\n$RefreshReg$(_c, \"ChinMarker\");","map":{"version":3,"names":["React","Stage","Layer","Line","Circle","jsxDEV","_jsxDEV","ChinMarker","_ref","position","onDragMove","lineLength","gapLength","lineColor","circleColor","lineWidth","canvasSize","leftLinePoints","rightLinePoints","circlePosition","x","y","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","draggable","points","stroke","strokeWidth","radius","fill","_c","$RefreshReg$"],"sources":["/Users/sakethn/Documents/Elysium/SDE @ Ortho/gnathiometer-plus/src/components/ChinMarker.js"],"sourcesContent":["import React from \"react\";\nimport { Stage, Layer, Line, Circle } from \"react-konva\";\n\nexport function ChinMarker({ position, onDragMove }) {\n  // These could be made dynamic if you want\n  const lineLength = 50;\n  const gapLength = 10;\n  const lineColor = \"black\";\n  const circleColor = \"red\";\n  const lineWidth = 2;\n  const canvasSize = 500; // set the canvas size\n\n  // Calculate points for lines\n  const leftLinePoints = [0, 0, lineLength / 2 - gapLength / 2, 0];\n  const rightLinePoints = [lineLength / 2 + gapLength / 2, 0, lineLength, 0];\n\n  // Circle position\n  const circlePosition = { x: lineLength / 2, y: 0 };\n\n  return (\n    <div>\n      <button>LOL</button>\n      <Stage\n        width={canvasSize}\n        height={canvasSize}\n        draggable\n        onDragMove={onDragMove}\n        position={position}\n      >\n        <Layer>\n          <Line\n            points={leftLinePoints}\n            stroke={lineColor}\n            strokeWidth={lineWidth}\n          />\n          <Line\n            points={rightLinePoints}\n            stroke={lineColor}\n            strokeWidth={lineWidth}\n          />\n          <Circle\n            radius={lineWidth * 2}\n            fill={circleColor}\n            {...circlePosition}\n          />\n        </Layer>\n      </Stage>\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,MAAM,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,OAAO,SAASC,UAAUA,CAAAC,IAAA,EAA2B;EAAA,IAA1B;IAAEC,QAAQ;IAAEC;EAAW,CAAC,GAAAF,IAAA;EACjD;EACA,MAAMG,UAAU,GAAG,EAAE;EACrB,MAAMC,SAAS,GAAG,EAAE;EACpB,MAAMC,SAAS,GAAG,OAAO;EACzB,MAAMC,WAAW,GAAG,KAAK;EACzB,MAAMC,SAAS,GAAG,CAAC;EACnB,MAAMC,UAAU,GAAG,GAAG,CAAC,CAAC;;EAExB;EACA,MAAMC,cAAc,GAAG,CAAC,CAAC,EAAE,CAAC,EAAEN,UAAU,GAAG,CAAC,GAAGC,SAAS,GAAG,CAAC,EAAE,CAAC,CAAC;EAChE,MAAMM,eAAe,GAAG,CAACP,UAAU,GAAG,CAAC,GAAGC,SAAS,GAAG,CAAC,EAAE,CAAC,EAAED,UAAU,EAAE,CAAC,CAAC;;EAE1E;EACA,MAAMQ,cAAc,GAAG;IAAEC,CAAC,EAAET,UAAU,GAAG,CAAC;IAAEU,CAAC,EAAE;EAAE,CAAC;EAElD,oBACEf,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAQ;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpBpB,OAAA,CAACL,KAAK;MACJ0B,KAAK,EAAEX,UAAW;MAClBY,MAAM,EAAEZ,UAAW;MACnBa,SAAS;MACTnB,UAAU,EAAEA,UAAW;MACvBD,QAAQ,EAAEA,QAAS;MAAAa,QAAA,eAEnBhB,OAAA,CAACJ,KAAK;QAAAoB,QAAA,gBACJhB,OAAA,CAACH,IAAI;UACH2B,MAAM,EAAEb,cAAe;UACvBc,MAAM,EAAElB,SAAU;UAClBmB,WAAW,EAAEjB;QAAU;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC,eACFpB,OAAA,CAACH,IAAI;UACH2B,MAAM,EAAEZ,eAAgB;UACxBa,MAAM,EAAElB,SAAU;UAClBmB,WAAW,EAAEjB;QAAU;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC,eACFpB,OAAA,CAACF,MAAM;UACL6B,MAAM,EAAElB,SAAS,GAAG,CAAE;UACtBmB,IAAI,EAAEpB,WAAY;UAAA,GACdK;QAAc;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACS,EAAA,GA9Ce5B,UAAU;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}