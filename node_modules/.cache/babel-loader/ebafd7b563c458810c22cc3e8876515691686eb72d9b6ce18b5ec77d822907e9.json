{"ast":null,"code":"var _jsxFileName = \"/Users/sakethn/Documents/Elysium/SDE @ Ortho/gnathiometer-plus/src/components/ChinMarker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Stage, Layer, Line, Circle, Group } from \"react-konva\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ChinMarker(_ref) {\n  _s();\n  let {\n    position,\n    onDragMove,\n    imageWidth,\n    imageHeight\n  } = _ref;\n  const lineLength = 50;\n  const gapLength = 10;\n  const lineColor = \"black\";\n  const circleColor = \"red\";\n  const lineWidth = 2;\n  const canvasSize = 1000; // set the canvas size\n\n  const [rotation, setRotation] = useState(0);\n  const leftLinePoints = [0, 0, lineLength / 2 - gapLength / 2, 0];\n  const rightLinePoints = [lineLength / 2 + gapLength / 2, 0, lineLength, 0];\n  const circlePosition = {\n    x: lineLength / 2,\n    y: 0\n  };\n  const rotateForward = () => {\n    setRotation(rotation + 5);\n  };\n  const rotateBackward = () => {\n    setRotation(rotation - 5);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: rotateForward,\n      children: \"Rotate Forward\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: rotateBackward,\n      children: \"Rotate Backward\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stage, {\n      width: imageWidth,\n      height: imageHeight,\n      draggable: true,\n      onDragMove: onDragMove,\n      position: position,\n      children: /*#__PURE__*/_jsxDEV(Layer, {\n        children: /*#__PURE__*/_jsxDEV(Group, {\n          rotation: rotation,\n          offsetX: circlePosition.x,\n          children: [/*#__PURE__*/_jsxDEV(Line, {\n            points: leftLinePoints,\n            stroke: lineColor,\n            strokeWidth: lineWidth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            points: rightLinePoints,\n            stroke: lineColor,\n            strokeWidth: lineWidth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Circle, {\n            radius: lineWidth * 2,\n            fill: circleColor,\n            ...circlePosition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(ChinMarker, \"KtFf5RGYOqNhGWz4PZT7B8M7m1w=\");\n_c = ChinMarker;\nvar _c;\n$RefreshReg$(_c, \"ChinMarker\");","map":{"version":3,"names":["React","useState","Stage","Layer","Line","Circle","Group","jsxDEV","_jsxDEV","ChinMarker","_ref","_s","position","onDragMove","imageWidth","imageHeight","lineLength","gapLength","lineColor","circleColor","lineWidth","canvasSize","rotation","setRotation","leftLinePoints","rightLinePoints","circlePosition","x","y","rotateForward","rotateBackward","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","width","height","draggable","offsetX","points","stroke","strokeWidth","radius","fill","_c","$RefreshReg$"],"sources":["/Users/sakethn/Documents/Elysium/SDE @ Ortho/gnathiometer-plus/src/components/ChinMarker.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Stage, Layer, Line, Circle, Group } from \"react-konva\";\n\nexport function ChinMarker({ position, onDragMove, imageWidth, imageHeight }) {\n  const lineLength = 50;\n  const gapLength = 10;\n  const lineColor = \"black\";\n  const circleColor = \"red\";\n  const lineWidth = 2;\n  const canvasSize = 1000; // set the canvas size\n\n  const [rotation, setRotation] = useState(0);\n\n  const leftLinePoints = [0, 0, lineLength / 2 - gapLength / 2, 0];\n  const rightLinePoints = [lineLength / 2 + gapLength / 2, 0, lineLength, 0];\n\n  const circlePosition = { x: lineLength / 2, y: 0 };\n\n  const rotateForward = () => {\n    setRotation(rotation + 5);\n  };\n\n  const rotateBackward = () => {\n    setRotation(rotation - 5);\n  };\n\n  return (\n    <div>\n      <button onClick={rotateForward}>Rotate Forward</button>\n      <button onClick={rotateBackward}>Rotate Backward</button>\n      <Stage\n        width={imageWidth}\n        height={imageHeight}\n        draggable\n        onDragMove={onDragMove}\n        position={position}\n      >\n        <Layer>\n          <Group rotation={rotation} offsetX={circlePosition.x}>\n            <Line\n              points={leftLinePoints}\n              stroke={lineColor}\n              strokeWidth={lineWidth}\n            />\n            <Line\n              points={rightLinePoints}\n              stroke={lineColor}\n              strokeWidth={lineWidth}\n            />\n            <Circle\n              radius={lineWidth * 2}\n              fill={circleColor}\n              {...circlePosition}\n            />\n          </Group>\n        </Layer>\n      </Stage>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}